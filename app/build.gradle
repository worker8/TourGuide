apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

repositories {
    mavenCentral()
    maven() {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

Properties getGradleProperties() {
    def gradlePropsFile = file('../gradle.properties')
    def Properties gradleProps = new Properties()
    if (gradlePropsFile.canRead()) {
        gradleProps.load(new FileInputStream(gradlePropsFile))
        println gradleProps['VERSION_CODE']
        println gradleProps['VERSION_NAME']
    } else {
        throw new GradleException("Could not read gradle.properties!")
    }
    gradleProps;
}

android {
    compileSdkVersion compileSdkVersionNum
    buildToolsVersion buildToolVersionNum
    def gradleProps = getGradleProperties()
    defaultConfig {
        applicationId "tourguide.tourguide"
        minSdkVersion minSdkVersionNum
        targetSdkVersion targetSdkVersionNum
        versionCode gradleProps['VERSION_CODE'].toInteger()
        versionName gradleProps['VERSION_NAME']
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation project(':tourguide')

    /* this is for debugging memory leak: https://github.com/square/leakcanary */
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


}

task print_git_tag_command << {
    def gradleProps = getGradleProperties()
    println "git tag -a v" + gradleProps['VERSION_NAME'] + " -m \"VERSION_CODE=" + gradleProps['VERSION_CODE'] + ", VERSION_NAME=" + gradleProps['VERSION_NAME'] + "\""
    println "git push --tags"
}

